{
  "version": 3,
  "sources": ["../../@web3-react/abstract-connector/src/index.ts"],
  "sourcesContent": ["import { EventEmitter } from 'events'\nimport { AbstractConnectorArguments, ConnectorUpdate, ConnectorEvent } from '@web3-react/types'\n\nexport abstract class AbstractConnector extends EventEmitter {\n  public readonly supportedChainIds?: number[]\n\n  constructor({ supportedChainIds }: AbstractConnectorArguments = {}) {\n    super()\n    this.supportedChainIds = supportedChainIds\n  }\n\n  public abstract async activate(): Promise<ConnectorUpdate>\n  public abstract async getProvider(): Promise<any>\n  public abstract async getChainId(): Promise<number | string>\n  public abstract async getAccount(): Promise<null | string>\n  public abstract deactivate(): void\n\n  protected emitUpdate(update: ConnectorUpdate): void {\n    if (__DEV__) {\n      console.log(`Emitting '${ConnectorEvent.Update}' with payload`, update)\n    }\n    this.emit(ConnectorEvent.Update, update)\n  }\n\n  protected emitError(error: Error): void {\n    if (__DEV__) {\n      console.log(`Emitting '${ConnectorEvent.Error}' with payload`, error)\n    }\n    this.emit(ConnectorEvent.Error, error)\n  }\n\n  protected emitDeactivate(): void {\n    if (__DEV__) {\n      console.log(`Emitting '${ConnectorEvent.Deactivate}'`)\n    }\n    this.emit(ConnectorEvent.Deactivate)\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;IAGsBA,oBAAtB,SAAA,eAAA;;;;kCAGkE,CAAA,IAAA,OAAlDC,oBAAAA,KAAAA;;UAEPA,oBAAoBA;;;;SASjBC,aAAA,SAAA,WAAWC,QAAX;cACK;AACXC,cAAQC,IAAR,eAAyBC,eAAeC,SAAxC,kBAAgEJ,MAAhE;;SAEGK,KAAKF,eAAeC,QAAQJ,MAAjC;;SAGQM,YAAA,SAAA,UAAUC,OAAV;cACK;AACXN,cAAQC,IAAR,eAAyBC,eAAeK,QAAxC,kBAA+DD,KAA/D;;SAEGF,KAAKF,eAAeK,OAAOD,KAAhC;;SAGQE,iBAAA,SAAA,iBAAA;cACK;AACXR,cAAQC,IAAR,eAAyBC,eAAeO,aAAxC,GAAA;;SAEGL,KAAKF,eAAeO,UAAzB;;;EAhC4CC,0BAAhD;",
  "names": ["AbstractConnector", "supportedChainIds", "emitUpdate", "update", "console", "log", "ConnectorEvent", "Update", "emit", "emitError", "error", "Error", "emitDeactivate", "Deactivate", "EventEmitter"]
}
