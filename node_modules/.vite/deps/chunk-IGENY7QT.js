import {
  require_events
} from "./chunk-E4YFJ4DO.js";
import {
  ConnectorEvent
} from "./chunk-LPPLLAJT.js";
import {
  __toESM
} from "./chunk-IKJM6GHQ.js";

// node_modules/@web3-react/abstract-connector/dist/abstract-connector.esm.js
var import_events = __toESM(require_events());
function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  subClass.__proto__ = superClass;
}
var AbstractConnector = function(_EventEmitter) {
  _inheritsLoose(AbstractConnector2, _EventEmitter);
  function AbstractConnector2(_temp) {
    var _this;
    var _ref = _temp === void 0 ? {} : _temp, supportedChainIds = _ref.supportedChainIds;
    _this = _EventEmitter.call(this) || this;
    _this.supportedChainIds = supportedChainIds;
    return _this;
  }
  var _proto = AbstractConnector2.prototype;
  _proto.emitUpdate = function emitUpdate(update) {
    if (true) {
      console.log("Emitting '" + ConnectorEvent.Update + "' with payload", update);
    }
    this.emit(ConnectorEvent.Update, update);
  };
  _proto.emitError = function emitError(error) {
    if (true) {
      console.log("Emitting '" + ConnectorEvent.Error + "' with payload", error);
    }
    this.emit(ConnectorEvent.Error, error);
  };
  _proto.emitDeactivate = function emitDeactivate() {
    if (true) {
      console.log("Emitting '" + ConnectorEvent.Deactivate + "'");
    }
    this.emit(ConnectorEvent.Deactivate);
  };
  return AbstractConnector2;
}(import_events.EventEmitter);

export {
  AbstractConnector
};
//# sourceMappingURL=chunk-IGENY7QT.js.map
