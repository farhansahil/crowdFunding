import {
  invariant
} from "./chunk-XUSVWCLU.js";
import {
  AbstractConnector
} from "./chunk-IGENY7QT.js";
import "./chunk-E4YFJ4DO.js";
import "./chunk-LPPLLAJT.js";
import "./chunk-IKJM6GHQ.js";

// node_modules/@web3-react/fortmatic-connector/dist/fortmatic-connector.esm.js
function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  subClass.__proto__ = superClass;
}
var chainIdToNetwork = {
  1: "mainnet",
  3: "ropsten",
  4: "rinkeby",
  42: "kovan"
};
var FortmaticConnector = function(_AbstractConnector) {
  _inheritsLoose(FortmaticConnector2, _AbstractConnector);
  function FortmaticConnector2(_ref) {
    var _this;
    var apiKey = _ref.apiKey, chainId = _ref.chainId;
    !Object.keys(chainIdToNetwork).includes(chainId.toString()) ? true ? invariant(false, "Unsupported chainId " + chainId) : invariant(false) : void 0;
    _this = _AbstractConnector.call(this, {
      supportedChainIds: [chainId]
    }) || this;
    _this.apiKey = apiKey;
    _this.chainId = chainId;
    return _this;
  }
  var _proto = FortmaticConnector2.prototype;
  _proto.activate = function activate() {
    try {
      var _temp3 = function _temp32() {
        return Promise.resolve(_this3.fortmatic.getProvider().enable().then(function(accounts) {
          return accounts[0];
        })).then(function(account) {
          return {
            provider: _this3.fortmatic.getProvider(),
            chainId: _this3.chainId,
            account
          };
        });
      };
      var _this3 = this;
      var _temp4 = function() {
        if (!_this3.fortmatic) {
          return Promise.resolve(import("./fortmatic-2DSDKUSK.js").then(function(m) {
            var _m$default;
            return (_m$default = m == null ? void 0 : m["default"]) != null ? _m$default : m;
          })).then(function(Fortmatic) {
            _this3.fortmatic = new Fortmatic(_this3.apiKey, _this3.chainId === 1 || _this3.chainId === 4 ? void 0 : chainIdToNetwork[_this3.chainId]);
          });
        }
      }();
      return Promise.resolve(_temp4 && _temp4.then ? _temp4.then(_temp3) : _temp3(_temp4));
    } catch (e) {
      return Promise.reject(e);
    }
  };
  _proto.getProvider = function getProvider() {
    try {
      var _this5 = this;
      return Promise.resolve(_this5.fortmatic.getProvider());
    } catch (e) {
      return Promise.reject(e);
    }
  };
  _proto.getChainId = function getChainId() {
    try {
      var _this7 = this;
      return Promise.resolve(_this7.chainId);
    } catch (e) {
      return Promise.reject(e);
    }
  };
  _proto.getAccount = function getAccount() {
    try {
      var _this9 = this;
      return Promise.resolve(_this9.fortmatic.getProvider().send("eth_accounts").then(function(accounts) {
        return accounts[0];
      }));
    } catch (e) {
      return Promise.reject(e);
    }
  };
  _proto.deactivate = function deactivate() {
  };
  _proto.close = function close() {
    try {
      var _this11 = this;
      return Promise.resolve(_this11.fortmatic.user.logout()).then(function() {
        _this11.emitDeactivate();
      });
    } catch (e) {
      return Promise.reject(e);
    }
  };
  return FortmaticConnector2;
}(AbstractConnector);
export {
  FortmaticConnector
};
//# sourceMappingURL=fortmatic-connector.esm-TJYPVHPD.js.map
