{
  "version": 3,
  "sources": ["../../eth-provider/resolve/index.js", "../../ethereum-provider/index.js", "../../eth-provider/ConnectionManager/index.js", "../../eth-provider/provider/index.js", "../../eth-provider/presets/index.js", "../../eth-provider/connections/injected.js", "../../eth-provider/connections/unavailable.js", "../../eth-provider/parse/index.js", "../../eth-provider/connections/ws.js", "../../eth-provider/node_modules/uuid/lib/rng-browser.js", "../../eth-provider/node_modules/uuid/lib/bytesToUuid.js", "../../eth-provider/node_modules/uuid/v4.js", "../../eth-provider/connections/http.js", "../../eth-provider/browser.js", "../../@web3-react/frame-connector/src/index.ts"],
  "sourcesContent": ["const getProtocol = location => {\n  if (location === 'injected') return 'injected'\n  if (location.endsWith('.ipc')) return 'ipc'\n  if (location.startsWith('wss://') || location.startsWith('ws://')) return 'ws'\n  if (location.startsWith('https://') || location.startsWith('http://')) return 'http'\n  return ''\n}\n\nmodule.exports = (targets, presets) => {\n  return [].concat(...[].concat(targets).map(provider => {\n    if (presets[provider]) {\n      return presets[provider].map(location => ({ type: provider, location, protocol: getProtocol(location) }))\n    } else {\n      return { type: 'custom', location: provider, protocol: getProtocol(provider) }\n    }\n  })).filter(provider => {\n    if (provider.protocol || provider.type === 'injected') {\n      return true\n    } else {\n      console.log('eth-provider | Invalid provider preset/location: \"' + provider.location + '\"')\n      return false\n    }\n  })\n}\n", "const EventEmitter = require('events')\n\nclass EthereumProvider extends EventEmitter {\n  constructor (connection) {\n    super()\n    this.connected = false\n    this.nextId = 0\n    this.promises = {}\n    this.subscriptions = []\n    this.connection = connection\n    this.connection.on('connect', () => this.checkConnection())\n    this.connection.on('close', () => this.emit('close'))\n    this.connection.on('payload', payload => {\n      const { id, method, error, result } = payload\n      if (typeof id !== 'undefined') {\n        if (this.promises[id]) { // Fulfill promise\n          payload.error ? this.promises[id].reject(error) : this.promises[id].resolve(result)\n          delete this.promises[id]\n        }\n      } else if (method && method.indexOf('_subscription') > -1) { // Emit subscription result\n        this.emit(payload.params.subscription, payload.params.result)\n        this.emit(method, payload.params) // Latest EIP-1193\n        this.emit('data', payload) // Backwards Compatibility\n      }\n    })\n    this.on('newListener', (event, listener) => {\n      if (event === 'networkChanged') {\n        if (!this.attemptedNetworkSubscription && this.connected) this.startNetworkSubscription()\n      } else if (event === 'accountsChanged') {\n        if (!this.attemptedAccountsSubscription && this.connected) this.startAccountsSubscription()\n      }\n    })\n  }\n  async checkConnection () {\n    try {\n      this.emit('connect', await this._send('net_version'))\n      this.connected = true\n      if (this.listenerCount('networkChanged') && !this.attemptedNetworkSubscription) this.startNetworkSubscription()\n      if (this.listenerCount('accountsChanged') && !this.attemptedAccountsSubscription) this.startAccountsSubscription()\n    } catch (e) {\n      this.connected = false\n    }\n  }\n  async startNetworkSubscription () {\n    this.attemptedNetworkSubscription = true\n    try {\n      let networkChanged = await this.subscribe('eth_subscribe', 'networkChanged')\n      this.on(networkChanged, netId => this.emit('networkChanged', netId))\n    } catch (e) {\n      console.warn('Unable to subscribe to networkChanged', e)\n    }\n  }\n  async startAccountsSubscription () {\n    this.attemptedAccountsSubscription = true\n    try {\n      let accountsChanged = await this.subscribe('eth_subscribe', 'accountsChanged')\n      this.on(accountsChanged, accounts => this.emit('accountsChanged', accounts))\n    } catch (e) {\n      console.warn('Unable to subscribe to accountsChanged', e)\n    }\n  }\n  enable () {\n    return new Promise((resolve, reject) => {\n      this._send('eth_accounts').then(accounts => {\n        if (accounts.length > 0) {\n          this.accounts = accounts\n          this.coinbase = accounts[0]\n          this.emit('enable')\n          resolve(accounts)\n        } else {\n          const err = new Error('User Denied Full Provider')\n          err.code = 4001\n          reject(err)\n        }\n      }).catch(reject)\n    })\n  }\n  _send (method, params = []) {\n    if (!method || typeof method !== 'string') return new Error('Method is not a valid string.')\n    if (!(params instanceof Array)) return new Error('Params is not a valid array.')\n    const payload = { jsonrpc: '2.0', id: this.nextId++, method, params }\n    const promise = new Promise((resolve, reject) => { this.promises[payload.id] = { resolve, reject } })\n    this.connection.send(payload)\n    return promise\n  }\n  send (...args) { // Send can be clobbered, proxy sendPromise for backwards compatibility\n    return this._send(...args)\n  }\n  _sendBatch (requests) {\n    return Promise.all(requests.map(payload => this._send(payload.method, payload.params)))\n  }\n  subscribe (type, method, params = []) {\n    return this._send(type, [method, ...params]).then(id => {\n      this.subscriptions.push(id)\n      return id\n    })\n  }\n  unsubscribe (type, id) {\n    return this._send(type, [id]).then(success => {\n      if (success) {\n        this.subscriptions = this.subscriptions.filter(_id => _id !== id) // Remove subscription\n        this.removeAllListeners(id) // Remove listeners\n        return success\n      }\n    })\n  }\n  sendAsync (payload, cb) { // Backwards Compatibility\n    if (!cb || typeof cb !== 'function') return cb(new Error('Invalid or undefined callback provided to sendAsync'))\n    if (!payload) return cb(new Error('Invalid Payload'))\n    // sendAsync can be called with an array for batch requests used by web3.js 0.x\n    // this is not part of EIP-1193's backwards compatibility but we still want to support it\n    if (payload instanceof Array) {\n      return this.sendAsyncBatch(payload, cb)\n    } else {\n      return this._send(payload.method, payload.params).then(result => {\n        cb(null, { id: payload.id, jsonrpc: payload.jsonrpc, result })\n      }).catch(err => {\n        cb(err)\n      })\n    }\n  }\n  sendAsyncBatch (payload, cb) {\n    return this._sendBatch(payload).then((results) => {\n      let result = results.map((entry, index) => {\n        return { id: payload[index].id, jsonrpc: payload[index].jsonrpc, result: entry }\n      })\n      cb(null, result)\n    }).catch(err => {\n      cb(err)\n    })\n  }\n  isConnected () { // Backwards Compatibility\n    return this.connected\n  }\n  close () {\n    this.connection.close()\n    this.connected = false\n    let error = new Error(`Provider closed, subscription lost, please subscribe again.`)\n    this.subscriptions.forEach(id => this.emit(id, error)) // Send Error objects to any open subscriptions\n    this.subscriptions = [] // Clear subscriptions\n  }\n}\n\nmodule.exports = EthereumProvider\n", "const EventEmitter = require('events')\n\nconst dev = process.env.NODE_ENV === 'development'\n\nclass ConnectionManager extends EventEmitter {\n  constructor (connections, targets, options) {\n    super()\n    this.targets = targets\n    this.connections = connections\n    this.connected = false\n    this.status = 'loading'\n    this.interval = options.interval || 5000\n    this.name = options.name || 'default'\n    this.inSetup = true\n    this.connect()\n  }\n\n  connect (index = 0) {\n    if (dev && index === 0) console.log(`\\n\\n\\n\\nA connection cycle started for provider with name: ${this.name}`)\n\n    if (this.connection && this.connection.status === 'connected' && index >= this.connection.index) {\n      if (dev) console.log('Stopping connection cycle becasuse we\\'re already connected to a higher priority provider')\n    } else if (this.targets.length === 0) {\n      if (dev) console.log('No valid targets supplied')\n    } else {\n      const { protocol, location } = this.targets[index]\n      this.connection = this.connections[protocol](location)\n\n      this.connection.on('error', err => {\n        if (!this.connected) return this.connectionError(index, err)\n        if (this.listenerCount('error')) return this.emit('error', err)\n        console.warn('eth-provider - Uncaught connection error: ' + err.message)\n      })\n\n      this.connection.on('close', (summary) => {\n        this.connected = false\n        this.emit('close')\n        if (!this.closing) this.refresh()\n      })\n\n      this.connection.on('connect', () => {\n        this.connection.target = this.targets[index]\n        this.connection.index = index\n        this.targets[index].status = this.connection.status\n        this.connected = true\n        this.inSetup = false\n        if (dev) console.log('Successfully connected to: ' + this.targets[index].location)\n        this.emit('connect')\n      })\n\n      this.connection.on('data', data => this.emit('data', data))\n      this.connection.on('payload', payload => this.emit('payload', payload))\n    }\n  }\n\n  refresh (interval = this.interval) {\n    if (dev) console.log(`Reconnect queued for ${(interval / 1000).toFixed(2)}s in the future`)\n    clearTimeout(this.connectTimer)\n    this.connectTimer = setTimeout(() => this.connect(), interval)\n  }\n\n  connectionError (index, err) {\n    this.targets[index].status = err\n    if (this.targets.length - 1 === index) {\n      this.inSetup = false\n      if (dev) console.warn('eth-provider unable to connect to any targets, view connection cycle summary: ', this.targets)\n      this.refresh()\n    } else { // Not last target, move on the next connection option\n      this.connect(++index)\n    }\n  }\n\n  close () {\n    this.closing = true\n    if (this.connection) {\n      this.connection.close() // Let event bubble from here\n    } else {\n      this.emit('close')\n    }\n    clearTimeout(this.connectTimer)\n  }\n\n  error (payload, message, code = -1) {\n    this.emit('payload', { id: payload.id, jsonrpc: payload.jsonrpc, error: { message, code } })\n  }\n\n  send (payload) {\n    if (this.inSetup) {\n      setTimeout(() => this.send(payload), 100)\n    } else if (this.connection.closed) {\n      this.error(payload, 'Not connected')\n    } else {\n      this.connection.send(payload)\n    }\n  }\n}\n\nmodule.exports = ConnectionManager\n", "const EventEmitter = require('events')\nconst EthereumProvider = require('ethereum-provider')\nconst ConnectionManager = require('../ConnectionManager')\n\nconst monitor = provider => {\n  function update (status) {\n    provider.status = status\n    if (provider instanceof EventEmitter) provider.emit('status', status)\n  }\n  async function check () {\n    if (provider.inSetup) return setTimeout(check, 1000)\n    try {\n      if (await provider.send('eth_syncing')) {\n        update('syncing')\n        setTimeout(() => check(), 5000)\n      } else {\n        update('connected')\n      }\n    } catch (e) {\n      update('disconnected')\n    }\n  }\n  update('loading')\n  check()\n  provider.on('connect', () => check())\n  provider.on('close', () => update('disconnected'))\n  return provider\n}\n\nmodule.exports = (connections, targets, options) => {\n  // If window.ethereum and injected is a target in any priority, return ethereum provider\n  if (connections.injected.__isProvider && targets.map(t => t.type).indexOf('injected') > -1) {\n    delete connections.injected.__isProvider\n    return monitor(connections.injected)\n  }\n  const provider = new EthereumProvider(new ConnectionManager(connections, targets, options))\n  provider.setMaxListeners(128)\n  return monitor(provider)\n}\n", "module.exports = {\n  injected: ['injected'],\n  frame: ['ws://127.0.0.1:1248', 'http://127.0.0.1:1248'],\n  direct: ['ws://127.0.0.1:8546', 'http://127.0.0.1:8545'], // IPC paths will be prepended in Node/Electron\n  infura: ['wss://mainnet.infura.io/ws/v3/786ade30f36244469480aa5c2bf0743b', 'https://mainnet.infura.io/v3/786ade30f36244469480aa5c2bf0743b'],\n  infuraRopsten: ['wss://ropsten.infura.io/ws/v3/786ade30f36244469480aa5c2bf0743b', 'https://ropsten.infura.io/v3/786ade30f36244469480aa5c2bf0743b'],\n  infuraRinkeby: ['wss://rinkeby.infura.io/ws/v3/786ade30f36244469480aa5c2bf0743b', 'https://rinkeby.infura.io/v3/786ade30f36244469480aa5c2bf0743b'],\n  infuraKovan: ['wss://kovan.infura.io/ws/v3/786ade30f36244469480aa5c2bf0743b', 'https://kovan.infura.io/v3/786ade30f36244469480aa5c2bf0743b']\n}\n", "const EventEmitter = require('events')\n\nclass InjectedConnection extends EventEmitter {\n  constructor (_injected, options) {\n    super()\n    if (_injected) {\n      setTimeout(() => this.emit('error', new Error('Injected web3 provider is not currently supported')), 0)\n    } else {\n      setTimeout(() => this.emit('error', new Error('No injected provider found')), 0)\n    }\n  }\n}\n\nmodule.exports = injected => options => new InjectedConnection(injected, options)\n", "const EventEmitter = require('events')\n\nclass UnavailableConnection extends EventEmitter {\n  constructor (message) {\n    super()\n    setTimeout(() => this.emit('error', new Error(message)), 0)\n  }\n}\n\nmodule.exports = message => () => new UnavailableConnection(message)\n", "let last, timeout\n\nmodule.exports = (res, cb) => {\n  const values = []\n  res\n    .replace(/\\}[\\n\\r]?\\{/g, '}|--|{') // }{\n    .replace(/\\}\\][\\n\\r]?\\[\\{/g, '}]|--|[{') // }][{\n    .replace(/\\}[\\n\\r]?\\[\\{/g, '}|--|[{') // }[{\n    .replace(/\\}\\][\\n\\r]?\\{/g, '}]|--|{') // }]{\n    .split('|--|')\n    .forEach(data => {\n      if (last) data = last + data // prepend the last chunk\n      let result\n      try {\n        result = JSON.parse(data)\n      } catch (e) {\n        last = data\n        clearTimeout(timeout) // restart timeout\n        timeout = setTimeout(() => cb(new Error('Parse response timeout')), 15 * 1000)\n        return\n      }\n      clearTimeout(timeout)\n      last = null\n      if (result) values.push(result)\n    })\n  cb(null, values)\n}\n", "const EventEmitter = require('events')\nconst parse = require('../parse')\nconst dev = process.env.NODE_ENV === 'development'\n\nlet WebSocket\n\nclass WebSocketConnection extends EventEmitter {\n  constructor (_WebSocket, url, options) {\n    super()\n    WebSocket = _WebSocket\n    setTimeout(() => this.create(url, options), 0)\n  }\n\n  create (url, options) {\n    if (!WebSocket) this.emit('error', new Error('No WebSocket transport available'))\n    try { this.socket = new WebSocket(url) } catch (e) { return this.emit('error', e) }\n    this.socket.addEventListener('error', err => this.emit('error', err))\n    this.socket.addEventListener('open', () => {\n      this.emit('connect')\n      this.socket.addEventListener('message', message => {\n        const data = typeof message.data === 'string' ? message.data : ''\n        parse(data, (err, payloads) => {\n          if (err) return //\n          payloads.forEach(load => {\n            if (Array.isArray(load)) {\n              load.forEach(payload => this.emit('payload', payload))\n            } else {\n              this.emit('payload', load)\n            }\n          })\n        })\n      })\n      this.socket.addEventListener('close', () => this.onClose())\n    })\n  }\n\n  onClose () {\n    this.socket = null\n    this.closed = true\n    if (dev) console.log('Closing WebSocket connection')\n    this.emit('close')\n    this.removeAllListeners()\n  }\n\n  close () {\n    if (this.socket) {\n      this.socket.close()\n    } else {\n      this.onClose()\n    }\n  }\n\n  error (payload, message, code = -1) {\n    this.emit('payload', { id: payload.id, jsonrpc: payload.jsonrpc, error: { message, code } })\n  }\n\n  send (payload) {\n    if (this.socket && this.socket.readyState === this.socket.CONNECTING) {\n      setTimeout(_ => this.send(payload), 10)\n    } else if (!this.socket || this.socket.readyState > 1) {\n      this.connected = false\n      this.error(payload, 'Not connected')\n    } else {\n      this.socket.send(JSON.stringify(payload))\n    }\n  }\n}\n\nmodule.exports = WebSocket => (url, cb) => new WebSocketConnection(WebSocket, url, cb)\n", "// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n", "/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([bth[buf[i++]], bth[buf[i++]], \n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]]]).join('');\n}\n\nmodule.exports = bytesToUuid;\n", "var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n", "const EventEmitter = require('events')\nconst uuid = require('uuid/v4')\n\nconst dev = process.env.NODE_ENV === 'development'\n\nlet XHR\n\nclass HTTPConnection extends EventEmitter {\n  constructor (_XHR, url, options) {\n    super()\n    XHR = _XHR\n    this.connected = false\n    this.subscriptions = false\n    this.status = 'loading'\n    this.url = url\n    this.pollId = uuid()\n    setTimeout(() => this.create(), 0)\n  }\n\n  create () {\n    if (!XHR) return this.emit('error', new Error('No HTTP transport available'))\n    this.on('error', () => { if (this.connected) this.close() })\n    this.init()\n  }\n\n  init () {\n    this.send({ jsonrpc: '2.0', method: 'eth_syncing', params: [], id: 1 }, (err, response) => {\n      if (err) return this.emit('error', err)\n      this.send({ jsonrpc: '2.0', id: 1, method: 'eth_pollSubscriptions', params: [this.pollId, 'immediate'] }, (err, response) => {\n        if (!err) {\n          this.subscriptions = true\n          this.pollSubscriptions()\n        }\n        this.connected = true\n        this.emit('connect')\n      })\n    })\n  }\n\n  pollSubscriptions () {\n    this.send({ jsonrpc: '2.0', id: 1, method: 'eth_pollSubscriptions', params: [this.pollId] }, (err, result) => {\n      if (err) {\n        this.subscriptionTimeout = setTimeout(() => this.pollSubscriptions(), 10000)\n        return this.emit('error', err)\n      } else {\n        if (!this.closed) this.subscriptionTimeout = this.pollSubscriptions()\n        if (result) {\n          result.map(p => {\n            let parse\n            try { parse = JSON.parse(p) } catch (e) { parse = false }\n            return parse\n          }).filter(n => n).forEach(p => this.emit('payload', p))\n        }\n      }\n    })\n  }\n\n  close () {\n    if (dev) console.log('Closing HTTP connection')\n    this.closed = true\n    this.emit('close')\n    clearTimeout(this.subscriptionTimeout)\n    this.removeAllListeners()\n  }\n\n  filterStatus (res) {\n    if (res.status >= 200 && res.status < 300) return res\n    const error = new Error(res.statusText)\n    error.res = res\n    throw error.message\n  }\n\n  error (payload, message, code = -1) {\n    this.emit('payload', { id: payload.id, jsonrpc: payload.jsonrpc, error: { message, code } })\n  }\n\n  send (payload, internal) {\n    if (this.closed) return this.error(payload, 'Not connected')\n    if (payload.method === 'eth_subscribe') {\n      if (this.subscriptions) {\n        payload.pollId = this.pollId\n      } else {\n        return this.error(payload, 'Subscriptions are not supported by this HTTP endpoint')\n      }\n    }\n    const xhr = new XHR()\n    let responded = false\n    const res = (err, result) => {\n      if (!responded) {\n        xhr.abort()\n        responded = true\n        if (internal) {\n          internal(err, result)\n        } else {\n          const { id, jsonrpc } = payload\n          const load = err ? { id, jsonrpc, error: { message: err.message, code: err.code } } : { id, jsonrpc, result }\n          this.emit('payload', load)\n        }\n      }\n    }\n    xhr.open('POST', this.url, true)\n    xhr.setRequestHeader('Content-Type', 'application/json')\n    xhr.timeout = 60 * 1000\n    xhr.onerror = res\n    xhr.ontimeout = res\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState === 4) {\n        try {\n          const response = JSON.parse(xhr.responseText)\n          res(response.error, response.result)\n        } catch (e) {\n          res(e)\n        }\n      }\n    }\n    xhr.send(JSON.stringify(payload))\n  }\n}\n\nmodule.exports = XHR => (url, options) => new HTTPConnection(XHR, url, options)\n", "const resolve = require('./resolve')\nconst provider = require('./provider')\nconst presets = require('./presets')\n\nconst injected = {\n  ethereum: typeof window !== 'undefined' && typeof window.ethereum !== 'undefined' ? window.ethereum : null,\n  web3: typeof window !== 'undefined' && typeof window.web3 !== 'undefined' ? window.web3.currentProvider : null\n}\nconst ws = typeof window !== 'undefined' && typeof window.WebSocket !== 'undefined' ? window.WebSocket : null\nconst XHR = typeof window !== 'undefined' && typeof window.XMLHttpRequest !== 'undefined' ? window.XMLHttpRequest : null\n\nif (injected.ethereum) injected.ethereum.__isProvider = true\n\nconst connections = {\n  injected: injected.ethereum || require('./connections/injected')(injected.web3),\n  ipc: require('./connections/unavailable')('IPC connections are unavliable in the browser'),\n  ws: require('./connections/ws')(ws),\n  http: require('./connections/http')(XHR)\n}\n\nmodule.exports = (targets = ['injected', 'frame'], options = {}) => provider(connections, resolve(targets, presets), options)\n", "import { AbstractConnectorArguments, ConnectorUpdate } from '@web3-react/types'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\nimport ethProvider from 'eth-provider'\nimport invariant from 'tiny-invariant'\n\nexport class UserRejectedRequestError extends Error {\n  public constructor() {\n    super()\n    this.name = this.constructor.name\n    this.message = 'The user rejected the request.'\n  }\n}\n\nexport class FrameConnector extends AbstractConnector {\n  private provider: any\n\n  constructor(kwargs: Required<AbstractConnectorArguments>) {\n    invariant(kwargs.supportedChainIds.length === 1, 'This connector only supports 1 chainId at the moment.')\n    super(kwargs)\n\n    this.handleNetworkChanged = this.handleNetworkChanged.bind(this)\n    this.handleChainChanged = this.handleChainChanged.bind(this)\n    this.handleAccountsChanged = this.handleAccountsChanged.bind(this)\n    this.handleClose = this.handleClose.bind(this)\n  }\n\n  private handleNetworkChanged(networkId: string): void {\n    if (__DEV__) {\n      console.log(\"Handling 'networkChanged' event with payload\", networkId)\n    }\n    this.emitUpdate({ provider: this.provider, chainId: networkId })\n  }\n\n  private handleChainChanged(chainId: string): void {\n    if (__DEV__) {\n      console.log(\"Handling 'chainChanged' event with payload\", chainId)\n    }\n    this.emitUpdate({ chainId })\n  }\n\n  private handleAccountsChanged(accounts: string[]): void {\n    if (__DEV__) {\n      console.log(\"Handling 'accountsChanged' event with payload\", accounts)\n    }\n    this.emitUpdate({ account: accounts.length === 0 ? null : accounts[0] })\n  }\n\n  private handleClose(code: number, reason: string): void {\n    if (__DEV__) {\n      console.log(\"Handling 'close' event with payload\", code, reason)\n    }\n    this.emitDeactivate()\n  }\n\n  public async activate(): Promise<ConnectorUpdate> {\n    if (!this.provider) {\n      this.provider = ethProvider('frame')\n    }\n\n    this.provider\n      .on('networkChanged', this.handleNetworkChanged)\n      .on('chainChanged', this.handleChainChanged)\n      .on('accountsChanged', this.handleAccountsChanged)\n      .on('close', this.handleClose)\n\n    const account = await this.provider\n      .enable()\n      .then((accounts: string[]): string => accounts[0])\n      .catch((error: Error): void => {\n        if (error && (error as any).code === 4001) {\n          throw new UserRejectedRequestError()\n        } else {\n          throw error\n        }\n      })\n\n    return { provider: this.provider, account }\n  }\n\n  public async getProvider(): Promise<any> {\n    return this.provider\n  }\n\n  public async getChainId(): Promise<number> {\n    return this.provider.send('eth_chainId')\n  }\n\n  public async getAccount(): Promise<null> {\n    return this.provider.send('eth_accounts').then((accounts: string[]): string => accounts[0])\n  }\n\n  public deactivate() {\n    this.provider\n      .removeListener('networkChanged', this.handleNetworkChanged)\n      .removeListener('chainChanged', this.handleChainChanged)\n      .removeListener('accountsChanged', this.handleAccountsChanged)\n      .removeListener('close', this.handleClose)\n  }\n}\n"],
  "mappings": "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",
  "names": ["WebSocket", "i", "err", "response", "XHR", "UserRejectedRequestError", "name", "constructor", "message", "Error", "FrameConnector", "kwargs", "supportedChainIds", "length", "invariant", "handleNetworkChanged", "bind", "handleChainChanged", "handleAccountsChanged", "handleClose", "networkId", "console", "log", "emitUpdate", "provider", "chainId", "accounts", "account", "code", "reason", "emitDeactivate", "activate", "ethProvider", "on", "enable", "then", "error", "getProvider", "getChainId", "send", "getAccount", "deactivate", "removeListener", "AbstractConnector"]
}
